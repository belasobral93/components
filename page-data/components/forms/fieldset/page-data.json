{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/forms/fieldset/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"aa760adf-ae32-5cf0-ad4a-8b83d2a67095","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Fieldset\",\n  \"status\": \"stable\",\n  \"figma\": \"file/2MG6DoSjk4IaLnjjFCnKFf/Forms\",\n  \"propsOf\": \"Fieldset\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Fieldset />\"), \" component is used to wrap Field components into meaningful groups. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"legend\"), \" property allows for a heading which is by default aligned above and to the left.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Fieldset legend=\\\"Legend\\\">\\n  <FieldText label=\\\"First\\\" />\\n  <FieldText label=\\\"Second\\\" />\\n  <FieldText label=\\\"Third\\\" />\\n</Fieldset>\\n<Button>Submit</Button>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"figma":"file/2MG6DoSjk4IaLnjjFCnKFf/Forms","github":null,"propsOf":"Fieldset","status":"stable","title":"Fieldset"},"tableOfContents":{}}},"pageContext":{"id":"aa760adf-ae32-5cf0-ad4a-8b83d2a67095"}}}