{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/content/date-time-format/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"fae2db55-4fbd-5984-b15e-2876d8afca8d","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DateTimeFormat\",\n  \"propsOf\": \"DateTimeFormat\",\n  \"github\": \"DateTimeFormat\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"DateTimeFormat\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DateTimeFormat\"), \" component will return a string with a language sensitive representation of the date and time. The specific moment can be specified as children or the default value will be assumed according to the default locale.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Flex justifyContent=\\\"space-around\\\" alignItems=\\\"center\\\">\\n  <DateTimeFormat />\\n</Flex>\\n\")), mdx(\"h2\", null, \"DateFormat\"), mdx(\"p\", null, \"Use this component to show only the Date.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Flex justifyContent=\\\"space-around\\\" alignItems=\\\"center\\\">\\n  <DateFormat />\\n</Flex>\\n\")), mdx(\"h2\", null, \"TimeFormat\"), mdx(\"p\", null, \"Use this component to show only the Time.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Flex justifyContent=\\\"space-around\\\" alignItems=\\\"center\\\">\\n  <TimeFormat />\\n</Flex>\\n\")), mdx(\"h2\", null, \"Specify locale and Date\"), mdx(\"p\", null, \"Pass the Date desired as children and the locale as prop.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.looker.com/admin-options/settings/users#locale\"\n  }), \"list supported locales\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Flex justifyContent=\\\"space-around\\\" alignItems=\\\"center\\\">\\n  <Text>\\n    <DateTimeFormat>{new Date(Date.UTC(2011, 1, 3, 5, 6, 2))}</DateTimeFormat>\\n  </Text>\\n  <Text>\\n    <DateTimeFormat locale=\\\"ar-EG\\\" />\\n  </Text>\\n</Flex>\\n\")), mdx(\"h2\", null, \"TimeZone\"), mdx(\"p\", null, \"TimeZone needs to be a specific string based on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.iana.org/time-zone\"\n  }), \"IANA standard\")), mdx(\"p\", null, \"When adding the timeZone the format will be long - look below for details on formating.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Flex justifyContent=\\\"space-around\\\" alignItems=\\\"center\\\">\\n  <Text>\\n    <DateTimeFormat timeZone=\\\"Asia/Kolkata\\\" format=\\\"long\\\" />\\n  </Text>\\n</Flex>\\n\")), mdx(\"h2\", null, \"Format\"), mdx(\"p\", null, \"*\", \" medium is the default format if not otherwise specificied.\"), mdx(DateTimeFormatTable, {\n    mdxType: \"DateTimeFormatTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"figma":null,"github":"DateTimeFormat","propsOf":"DateTimeFormat","status":null,"title":"DateTimeFormat"},"tableOfContents":{"items":[{"url":"#datetimeformat","title":"DateTimeFormat"},{"url":"#dateformat","title":"DateFormat"},{"url":"#timeformat","title":"TimeFormat"},{"url":"#specify-locale-and-date","title":"Specify locale and Date"},{"url":"#timezone","title":"TimeZone"},{"url":"#format","title":"Format"}]}}},"pageContext":{"id":"fae2db55-4fbd-5984-b15e-2876d8afca8d"}}}